□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■□□□■■■□□
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■□□■□□□■□
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□■□□□■□
□□■■■□□□■■■■□□□□□□□□□■■■■□□□■□■□□■■■□□□■□□□□□□■□
□■□□□■□□■□□□■□□□□□□□□■□□□■□□■■□□■□□□■□□■□□□□□■□□
□■□□□□□□■□□□■□□□□□□□□■□□□■□□■□□□■□□□■□□■□□□□■□□□
□□■■■□□□■□□□■□□□□□□□□■□□□■□□■□□□■□□□■□□■□□□■□□□□
□□□□□■□□■□□□■□□□□□□□□■□□□■□□■□□□■□□□■□□■□□■□□□□□
□■□□□■□□■□□□■□□□□□□□□■□□□■□□■□□□■□□□■□□■□□■□□□□□
□□■■■□□□■■■■□□□■■■■■□■■■■□□□■□□□□■■■□□□■□□■■■■■□
□□□□□□□□■□□□□□□□□□□□□■□□□□□□□□□□□□□□□□□■□□□□□□□□
□□□□□□□□■□□□□□□□□□□□□■□□□□□□□□□□□□□□□□■□□□□□□□□□
□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□

April. 10, 2021
ChanHee Han


> Shell 명령어는 소문자로 입력
> 인자로 사용되는 숫자는 16 진수로 입력
> 16 진수 입력 시에는 알파벳 대소문자 모두 사용 가능
> 메모리 주소는 0x0부터 0xFFFFF까지 범위까지 유효
> Assembler가 처리하는 파일의 알파벳은 모두 대문자


**컴파일**
    (make)를 입력하여 컴파일

**실행**
    (./20182204.out)을 입력
    이후 사용하고자 하는 명령어 입력

**삭제**
    (make clean)을 입력
    오브젝트 파일을 포함한 실행파일까지 삭제

**명령어**
    입력 프롬프트*sicsim>*에 다음과 같은 명령어를 입력 가능
    - h[elp] : 명령어들의 목록을 출력
    - d[ir] : 현재 디렉토리의 파일을 출력
    - q[uit] : sicsim 을 종료
    - hi[story] : 현재까지 입력한 유효한 명령어들을 출력
    - du[mp][start,end] : 메모리의 내용을 출력
    - e[dit]address,value : 메모리 (address) 번지의 값을 (value)로 변경
    - f[ill]start,end,value : 메모리 (start)부터 (end)번지까지의 값을 (value)로 변경
    - reset : 메모리 전체의 값을 0으로 변경
    - opcode mnemonic : (mnemonic)의 opcode를 출력
    - opcodelist : opcode hash table의 내용을 출력
    - type file : 현재 디렉토리의 file의 내용을 출력합니다.
    - assemble file : file을 assemble합니다. 그리고 .obj 파일과 .lst 파일을 생성합니다.
    - symbol : 최근에 성공한 assemble 과정에서 생성된 symbol table을 출력합니다.    